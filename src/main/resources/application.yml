server:
  port: ${SERVER_PORT:8082}

spring:
  application:
    name: projection-service

  webflux:
    base-path: /api/event-query

  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/event-seating}

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: ${KAFKA_GROUP_ID:projection-service-group-v16}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # We will deserialize the value as a simple String
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      properties:
  #        spring.json.trusted.packages: '*'
  #        spring.json.value.default.type: com.ticketly.mseventseatingprojection.dto.SeatStatusUpdateEvent

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://auth.ticketly.com:8080/realms/event-ticketing}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://auth.ticketly.com:8080/realms/event-ticketing/protocol/openid-connect/certs}
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://auth.ticketly.com:8080/realms/event-ticketing}
        registration:
          # This client is used for M2M communication
          keycloak-m2m-client:
            provider: keycloak
            client-id: ${EVENT_PROJECTION_CLIENT_ID:event-projection-service-client}
            client-secret: ${EVENT_PROJECTION_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: internal-api

logging:
  level:
    root: INFO
    com.ticketly: DEBUG
    org.springframework.security: DEBUG

aws:
  s3:
    public-base-url: ${AWS_S3_PUBLIC_URL:https://ticketly-storage.s3.us-east-1.amazonaws.com}

springdoc:
  swagger-ui:
    path: /docs/swagger-ui.html
    oauth:
      client-id: ${SWAGGER_OAUTH_CLIENT_ID:login-testing}
      use-pkce-with-authorization-code-grant: true
      scopes:
        - internal-api
      additional-query-string-params:
        nonce: test-nonce-value

services:
  event-command:
    base-url: ${COMMAND_SERVICE_URL:http://localhost:8081/api/event-seating}