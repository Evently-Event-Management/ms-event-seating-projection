server:
  port: 8082

spring:
  application:
    name: projection-service

  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/event-seating}

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: ${KAFKA_GROUP_ID:projection-service-group-v10}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # We will deserialize the value as a simple String
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      properties:
  #        spring.json.trusted.packages: '*'
  #        spring.json.value.default.type: com.ticketly.mseventseatingprojection.dto.SeatStatusUpdateEvent

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/event-ticketing}
        registration:
          # This client is used for M2M communication
          keycloak-m2m-client:
            provider: keycloak
            client-id: event-projection-service-client
            client-secret: ${EVENT_PROJECTION_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: internal-api
services:
  event-command:
    base-url: ${COMMAND_SERVICE_URL:http://localhost:8081/api/event-seating}